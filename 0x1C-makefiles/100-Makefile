# Compiler
CC = gcc

# Source files
SRC = $(wildcard *.c)

# Executable name
NAME = school

# Object files (derived from source files)
OBJ = $(SRC:.c=.o)

# Program to remove files
RM = rm -rf

# Favorite compiler flags (passed directly to the compiler)
CFLAGS = -Wall -Werror -Wextra -pedantic

# Rules

.PHONY: all clean oclean fclean re

all: $(NAME)

$(NAME): $(OBJ)
	$(CC) $(CFLAGS) $^ -o $@

# Make sure m.h exists before compilation
m.h:
	@echo "Missing header file m.h. Make sure it exists before building."
	@exit 1

# Cleaning rules

clean:
	$(RM) $(NAME)

oclean:
	$(RM) $(OBJ)

fclean: clean oclean

re: fclean all


# Ensure $(RM) is used for cleaning
.PHONY: clean oclean fclean
$(clean):
	@$(RM) $(NAME)
$(oclean):
	@$(RM) $(OBJ)
$(fclean):
	@$(RM) $(NAME) $(OBJ)


# Use wildcards and avoid explicit lists
.PHONY: OBJ
$(OBJ): %.o: %.c m.h
	$(CC) $(CFLAGS) -c $< -o $@

